#!/bin/bash
. is_peregrine

# Input
if [[ $# == 0 ]]; then
  echo "Please add the source superfolder as a first argument, e.g. '~/wirittte_data'"
  exit
fi

if [[ $# == 1 ]]; then
  echo "Please add the date as a second argument, e.g. '20170711'"
  exit
fi

# Variable initialization
source_superfolder=$1
echo "source_superfolder: "$source_superfolder

date=$2
echo "date: "$date

source_folder=$source_superfolder"/"$date
echo "source_folder: "$source_folder

on_peregrine=`is_peregrine`
echo "on_peregrine: "$on_peregrine

skip_install=0
echo "skip_install: "$skip_install

# Checking inputs
if [ -d $source_superfolder  ]; then
  echo "OK: source super folder is a folder"
else
  echo "ERROR: source super folder is not a folder"
  exit
fi

if [ -d $source_folder  ]; then
  echo "OK: source folder is a folder"
else
  echo "ERROR: source folder is not a folder"
  exit
fi

##########################
# Update other packages
##########################

if [[ $skip_install == 0 ]]; then
  jobid=`sbatch install_r_packages.sh | cut -d ' ' -f 4`
  echo "jobid: "$jobid
else
  echo "Skip install_r_packages"
fi

##########################
# Update this package
##########################

if [[ $skip_install == 0 ]]; then
  cmd="sbatch --dependency=afterok:$jobid install_this_r_package.sh"
  echo "cmd: "$cmd
  jobid=`$cmd | cut -d ' ' -f 4`
  echo "jobid: "$jobid
else
  echo "Skip install_this_r_package"
fi

##########################
# Collect data
##########################

. collect $@
